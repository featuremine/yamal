# COPYRIGHT (c) 2019-2023 by Featuremine Corporation.
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.

name: CMake PR

on:
  pull_request:

permissions: write-all

jobs:
  utility:
    runs-on: ubuntu-20.04
    outputs:
      release-check: ${{ steps.release-check.outputs.release-check }}
    
    steps:
    - name: Utility tasks
      id: release-check
      uses: featuremine/actions/utility@v3
      with:
        gh_token: ${{ secrets.GITHUB_TOKEN }}
        utility_token: ${{ secrets.UTILITY_COMMIT_TOKEN }}
        mypy: true

  build-manylinux:
    needs: utility
    runs-on: ubuntu-20.04
    container:
      image: public.ecr.aws/p0w8t0l8/ci-hosted-gh-centos7-gcc10.2.0
    
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Build ${{ github.event.repository.name }} with fm gcc
      uses: featuremine/actions/package/build@v3
      with:
        gh_token: ${{ secrets.GITHUB_TOKEN }}
        docs: true
        wheel: true
        upload: ${{ needs.utility.outputs.release-check == 'release' }}
        test_pypi_token: ${{ secrets.TEST_PYPI_API_TOKEN }}

  build-macos:
    if: needs.utility.outputs.release-check == 'release'
    needs: utility
    runs-on: macos-12

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: brew install pkg-config cmake googletest doxygen

    - name: Install sphinx
      run: pip3 install sphinx breathe sphinx_rtd_theme m2r mistune==0.8.4 sphinx-autodoc-typehints

    - name: Build ${{ github.event.repository.name }} with fm gcc
      uses: featuremine/actions/package/build@v3
      with:
        gh_token: ${{ secrets.GITHUB_TOKEN }}
        docs: false
        wheel: true
        upload: ${{ needs.utility.outputs.release-check == 'release' }}

  build-macos-13-arm:
    needs: utility
    if: needs.utility.outputs.release-check == 'release'
    runs-on: macos-13-xlarge

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: brew install pkg-config cmake googletest doxygen

    - name: Install sphinx
      run: pip3 install sphinx breathe sphinx_rtd_theme m2r mistune==0.8.4 sphinx-autodoc-typehints

    - name: Build ${{ github.event.repository.name }} with fm gcc
      uses: featuremine/actions/package/build@v3
      with:
        gh_token: ${{ secrets.GITHUB_TOKEN }}
        docs: false
        wheel: true
        upload: ${{ needs.utility.outputs.release-check == 'release' }}

  test-centos:
    needs: [utility, build-manylinux]
    if: needs.utility.outputs.release-check == 'release'
    runs-on: ubuntu-20.04
    container:
      image: public.ecr.aws/p0w8t0l8/ci-hosted-gh-centos7-gcc10.2.0
    
    steps:
    - name: Test ${{ github.event.repository.name }} release
      uses: featuremine/actions/package/test@v3
      with:
        gh_token: ${{ secrets.GITHUB_TOKEN }}

  test-pythons-ubuntu:
    needs: [utility, build-manylinux, build-macos]
    if: needs.utility.outputs.release-check == 'release'
    strategy:
      matrix:
        python_version: ['3.6', '3.7', '3.8', '3.9', '3.10', '3.11']
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python_version }}

      - name: Test ${{ github.event.repository.name }} release for python version ${{ matrix.python_version }}
        uses: featuremine/actions/package/test@v3
        with:
          gh_token: ${{ secrets.GITHUB_TOKEN }}
          sudo: true

  test-pythons-mac:
    needs: [utility, build-manylinux, build-macos]
    if: needs.utility.outputs.release-check == 'release'
    strategy:
      matrix:
        python_version: ['3.7', '3.8', '3.9', '3.10', '3.11']
    runs-on: macos-12
    steps:
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python_version }}

      - name: Test ${{ github.event.repository.name }} release for python version ${{ matrix.python_version }}
        uses: featuremine/actions/package/test@v3
        with:
          gh_token: ${{ secrets.GITHUB_TOKEN }}
          sudo: true
