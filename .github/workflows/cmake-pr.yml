name: CMake PR

on:
  pull_request:

permissions: write-all

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:

  utility:
    runs-on: ubuntu-latest
    outputs:
      release-check: ${{ steps.release-check.outputs.release-check }}
    
    steps:
    - name: Utility tasks
      id: release-check
      uses: featuremine/actions/utility@main
      with:
        gh_token: ${{ secrets.GITHUB_TOKEN }}
        utility_token: ${{ secrets.UTILITY_COMMIT_TOKEN }}

  build-manylinux:
    needs: utility
    runs-on: ubuntu-20.04
    container:
      image: public.ecr.aws/p0w8t0l8/ci-hosted-gh-centos7-gcc10.2.0
    
    steps:
    - uses: actions/checkout@main

    - name: Configure ${{ github.event.repository.name }} CMake with fm gcc
      run: >
        cmake -B ${{github.workspace}}/build
        -DBUILD_TESTING=ON -DBUILD_WHEEL=ON -DBUILD_API_DOCS=ON
        -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
      
    - name: Build ${{ github.event.repository.name }} with fm gcc
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} -- -j4

    - name: Test ${{ github.event.repository.name }} with ctest
      run: cd ${{github.workspace}}/build && ctest --extra-verbose -C ${{env.BUILD_TYPE}}

    - name: Compress documentation
      if: needs.utility.outputs.release-check == 'release'
      run: cd ${{github.workspace}}/build && tar -czvf docs-v$(cat ../VERSION).tar.gz -C docs/sphinx . 
      
    - name: Upload documentation
      if: needs.utility.outputs.release-check == 'release'
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: gh release upload v$(cat VERSION) ${{github.workspace}}/build/docs-v$(cat VERSION).tar.gz --clobber

    - name: Package
      if: needs.utility.outputs.release-check == 'release'
      run: cd ${{github.workspace}}/build && cpack -G RPM
    
    - name: Upload package
      if: needs.utility.outputs.release-check == 'release'
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: gh release upload v$(cat VERSION) ${{github.workspace}}/build/yamal-$(cat VERSION)-Linux.rpm --clobber
